
.TH DUB\-TEST "1"

.SH NAME
dub-test \- build the package and run contained unit tests

.SH SYNOPSIS

\fBdub test\fR
[\fIPACKAGE\fR] 
[\fIOPTIONS\&.\&.\&.\fR] 
[\-\- \fIAPPLICATION ARGUMENTS.\&.\&.\fR]

.SH DESCRIPTION
Builds the package and executes all contained unit tests\&.
.PP
If no explicit configuration is given, an existing \fIunittest\fR configuration
will be preferred for testing\&. If none exists, the first library type
configuration will be used, and if that doesn't exist either, the first
executable configuration is chosen\&.
.PP
When a custom main file (\fB\-\-main\-file\fR) is specified, only library
configurations can be used\&. Otherwise, depending on the type of the selected
configuration, either an existing main file will be used (and needs to be
properly adjusted to just run the unit tests for 'version(unittest)'), or DUB
will generate one for library type configurations\&.
.PP
Finally, if the package contains a dependency to the "tested" package, the
automatically generated main file will use it to run the unit tests\&.

.SH OPTIONS

Apart of the options listed below, this command also honours common options 
listed in \fIdub\fR(1)\&.

.TP
\fB\-\-main\-file\fR=\fIFILE\fR
Use a custom file containing the main() function for running the tests\&.

.TP
\fB\-\-combined\fR
Try to build the whole project in a single compiler run\&.

.TP
\fB\-f, \-\-force\fR
Force a recompilation even if the target is up to date\&.

.TP
\fB\-\-coverage\fR
Enable code coverage statistics to be generated\&.

.TP
\fB\-b, \-\-build\fR=\fIBUILD TYPE\fR
Perform specified build type\&. Note that setting the DFLAGS environment variable
will override the build type with custom flags\&. Possible names are
\fIdebug\fR (default), \fIplain\fR, \fIrelease\fR, \fIrelease-debug\fR,
\fIrelease-nobounds\fR, \fIunittest\fR, \fIprofile\fR, \fIprofile-gc\fR,
\fIdocs\fR, \fIddox\fR, \fIcov\fR, \fIunittest-cov\fR and custom types\&.

.TP
\fB\-c, \-\-config\fR=\fICONFIG\fB
Build the specified configuration\&. Configurations can be defined in
\fIdub\&.json\fB or \fIdub\&.sdl\fB\&.
 
.TP
\fB\-\-override\-config\fR=\fIDEPENDENCY\fB/\fICONFIG\fB
Use the specified configuration for a certain dependency\&. Can be specified
multiple times\&.

.TP
\fB\-\-compiler\fR=\fICOMPILER\fR
Use the specified compiler (can be a path)\&. Arbitrary pre\- and suffixes to the
identifiers below are recognized (e\&.g\&. ldc2 or dmd\-2\&.063) and matched to the
proper compiler type: \fIdmd\fB, \fIgdc\fR, \fIldc\fR, \fIgdmd\fR, \fIldmd\fR\&.

.TP
\fB\-a\fR, \fB\-\-arch\fR=\fIARCHITECTURE\fR
Force a different architecture (e\&.g\&. x86 or x86_64)\&.

.TP
\fB\-d\fR, \fB\-\-debug\fR=\fIVALUE\fR
Define the specified debug version identifier when building\&. Can be used
multiple times\&.

.TP
\fB\-\-nodeps\fR
Do not check or update dependencies before building\&.

.TP
\fB\-\-build\-mode\fR=\fIseparate\fB|\fIallAtOnce\fB|\fIsingleFile\fR
Specify the way the compiler and linker are invoked\&. Default is \fIseparate\fR\&.

.TP
\fB\-\-single\fR
Treat the package name as a filename\&. The file must contain a package recipe
comment\&.

.TP
\fB\-\-force\-remove\fR
Deprecated\&.

.SH FILES

\fIdub\&.json\fR, \fIdub\&.sdl\fR

.SH SEE ALSO

\fIdub\fR(1), \fIdub\-build\fR(1), \fIdub\-run\fR(1), \fIdub\-generate\fR,
\fIdub\&.json\fR(5), \fIdub\&.sdl\fR(5)
